# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  - push
  - pull_request
  
env:
  PYTHON_VERSION: "3.10"

jobs:
  codestyle:
    name: Codestyle (black+isort)
    
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ env.PYTHON_VERSION }}


      - name: Check code formatting with black
        uses: rickstaa/action-black@v1
        id: action_black
        with:
          black_args: ". --diff"
      - name: Check import order with isort    
        uses: isort/isort-action@v1
        with:
          configuration: "--diff"
  
  # poetry:
  #   name: Poetry (install, check, build, publish)
    
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
        
  #     - name: Set up Python ${{ env.PYTHON_VERSION }}
  #       uses: actions/setup-python@v3
  #       with:
  #         python-version: ${{ env.PYTHON_VERSION }}
          
  #     - name: Install Poetry and codestyle tools
  #       run: |
  #         pip install poetry
  #         pip install poethepoet
  #         pip install black
  #         pip install isort
  #         pip install flake8
          
  #     - name: Install dependencies
  #       run: |
  #         poetry install
          
  #     - name: Check for security vulnerabilities
  #       run: |
  #         poetry check
          
  #     - name: Build package
  #       run: |
  #         poetry build
          
  #     - name: run codestyle checks
  #       run: |
  #         poe black --check --diff && poe isort --check --diff && poe flake8
  #     - name: Publish package
  #       run: |
  #         poetry publish
  
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest black isort
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Check code formatting with black
      run: |
        black .
    - name: Check import order with isort
      run: |
        isort .
    - name: Commit changes made by black and isort
      run: |
        git add .
        git diff-index --quiet HEAD || git commit -m "Apply black and isort formatting"
#    - name: Test with pytest
#      run: |
#        pytest
